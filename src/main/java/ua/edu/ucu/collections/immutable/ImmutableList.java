package ua.edu.ucu.collections.immutable;

// У результаті змін, що призводять на модифікації (зміну стану) колекції має повртатись нова колекція
public interface ImmutableList {

    //додає елемент у кінець колекції
    ImmutableList add(Object e);

    // Додає елемент до колекції за індексом, та кидає виключну ситуацію, якщо індекс виходить за межі колекції
    ImmutableList add(int index, Object e);

    // Додає масив елементів у кінець колекції
    ImmutableList addAll(Object[] c);

    // Додає масив елементів починаючи з зазначеного індекса, та кидає виключну ситуацію, якщо індекс виходить за межі колекції
    ImmutableList addAll(int index, Object[] c);

    // Повертає елемент за індексом, та кидає виключну ситуацію, якщо індекс виходить за межі колекції
    Object get(int index);

    // Видаляє елемент за індексом, та кидає виключну ситуацію, якщо індекс виходить за межі колекції
    ImmutableList remove(int index);

    // Змінює значення елементу за індексом, та кидає виключну ситуацію, якщо індекс виходить за межі колекції
    ImmutableList set(int index, Object e);

    // Шукає індекс елемента (повертає індекс першого який знайшов, або -1 у випадку відсутності)
    int indexOf(Object e);

    // Розмір колекції
    int size();

    // Очищує вміст колекції
    ImmutableList clear();

    // Якщо у колеції нема елементів то повертає true
    boolean isEmpty();

    // Перетворює колекцію до масиву обєктів
    Object[] toArray();

    // Повертає рядок, де через кому відображаютсься елементи колекції
    @Override
    String toString();
}
